services:
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      # üëá Ïú†Ï†Ä ÏÑúÎπÑÏä§ ÌîÑÎ°úÌïÑ static ÌååÏùº ÎßàÏö¥Ìä∏
      - ./services/user_service/app/static/profiles:/usr/share/nginx/html/static/profiles
      # üëá Î∏îÎ°úÍ∑∏ ÏÑúÎπÑÏä§ Í≤åÏãúÍ∏Ä static ÌååÏùº ÎßàÏö¥Ìä∏
      - ./services/blog_service/app/static/articles:/usr/share/nginx/html/static/articles
    depends_on:
      - api_gateway
    networks:
      - webnet

  api_gateway:
    build: ./gateway
    volumes:
      - ./gateway/app:/app
    ports:
      - 8080:8000
    environment:
      USER_SERVICE_URL: http://user_service:8001
      BLOG_SERVICE_URL: http://blog_service:8002
    depends_on:
      user_service:
        condition: service_started
      blog_service:
        condition: service_started
    networks:
      - webnet

  user_service:
    build: ./services/user_service
    volumes:
      - ./services/user_service/app:/app
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: mysql+asyncmy://${DB_USER}:${DB_PASSWORD}@user_db:3306/user_db
      REDIS_URL: redis://redis_db:6379/0
    depends_on:
      user_db:
        condition: service_healthy
      redis_db:
        condition: service_started
    networks:
      - webnet

  user_db:
    image: mysql:8.0
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${USER_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: user_db
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "33061:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet

  blog_service:
    build: ./services/blog_service
    volumes:
      - ./services/blog_service/app:/app
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: mysql+asyncmy://${DB_USER}:${DB_PASSWORD}@blog_db:3306/blog_db
      REDIS_URL: redis://redis_db:6379/0
    depends_on:
      blog_db:
        condition: service_healthy
      redis_db:
        condition: service_healthy
    networks:
      - webnet

  blog_db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${BLOG_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: blog_db
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "33062:3306"
    volumes:
      - blog_db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet

  redis_db:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet

volumes:
  blog_db_data:

networks:
  webnet:
